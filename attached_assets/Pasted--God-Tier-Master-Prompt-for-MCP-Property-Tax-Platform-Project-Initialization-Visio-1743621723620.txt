üöÄ **God-Tier Master Prompt for MCP Property Tax Platform**

### üèÜ Project Initialization & Vision

Agent, you‚Äôre building **‚ÄúBillion-Dollar Vision: The MCP Property Tax Platform‚Äù**, an AI-driven, fully automated SaaS platform revolutionizing property tax assessment, valuation accuracy, citizen engagement, regulatory compliance, and operational efficiency.

**Purpose:** Transform property tax systems globally through advanced AI, semantic understanding, and blockchain-level transparency.

**Audience:** Governments, Appraisers, Real Estate Professionals, Citizens.

**Inspiration:** Apple's simplicity, Spatialest sophistication, intuitive citizen interfaces.

---

### üìö Technology Stack & Environment Setup

**Frontend:** React (Next.js), TailwindCSS, Shadcn/ui, Zustand

**Backend:** Python (FastAPI), Node.js (Express)

**Database:** PostgreSQL/PostGIS

**GIS Integration:** ArcGIS primary, Leaflet secondary

**RAG & Vector Database:** LangChain, Pinecone

**Authentication:** Clerk/Auth0

**Cloud:** AWS/GCP/Azure Kubernetes (auto-scaling)

**CI/CD:** GitHub Actions

**Environments:**
- Development: Continuous preview
- Staging: Dedicated testing
- Production: Scalable Kubernetes clusters

---

### üóÉ Core MCP Architecture & AI Agents

Implement interconnected AI Agents in a modular architecture, **mapped directly to PACS WA Modules**:

**1. Data Management Agent:**
- Real-time ingestion of PACS modules: `Land`, `Fields`, `Improvements`, `Destroyed Property`, `Imports`
- Automated ETL and normalization pipelines
- AI-driven anomaly detection using incoming data deltas
- Blockchain-style audit logging tied to `PACS:Event Management`

**2. Property Valuation Agent:**
- Leverage `PACS:Valuation Methods`, `Comparable Sales`, `Marshall & Swift`, `Recalculation`
- AI-driven historical data analysis and continuous recalibration
- Scenario simulation via model adjustment interface
- Feedback integration from `PACS:Protest Processing` outcomes

**3. Citizen Interaction Agent:**
- 24/7 GPT-based chatbot with context-aware retrieval from `PACS:Ownership`, `Customer Alerts`, `Protest Processing`
- Personalized dashboards integrating `Notices`, `Appeals`, `Payment History`
- Status updates, document uploads, and protest assistance workflows

**4. Quality Control & Audit Agent:**
- Real-time QA automation with hooks into `PACS:DOR Reports`, `Report Designer`, `Audit Logs`
- Trigger-based alerting for valuation errors and misconfigurations
- Human-in-the-loop review layer with `PACS:Event Management` traceability

**5. Legal & Compliance Agent:**
- Monitor `PACS:Levy Certification`, `Exemptions`, `REET`, `Rollback`, `Litigation`
- Compliance rule engine enforcing PACS regulatory logic
- Immutable blockchain-style audit trail and legal advisory sync

**6. Integration & Reporting Agent:**
- Standardized API overlays on `PACS:Exports`, `PACS Query`, `Tax Statements`
- Real-time dashboard generation from PACS data via `Report Designer`
- Role-based access control extending `PACS:User & Roles` with token auth

---

### ‚úÖ Rigorous Testing & Quality Assurance
- Unit tests for valuation, ingestion, compliance logic (PyTest, Vitest)
- Integration testing of PACS data pipelines
- E2E tests for citizen flows (Playwright)
- GitHub Actions runs CI tests daily with real data scenarios

---

### üåê RAG & Vector Database Integration
- LangChain + Pinecone with vectorized PACS records
- Embedding PACS legal docs, protests, valuation references
- Intelligent, real-time query support from chatbot and dashboards

---

### üõ°Ô∏è Security & Compliance by Design
- Full encryption at rest/transit
- RBAC via `PACS:User & Roles` + custom token logic
- Compliance alerts from `REET`, `Affidavit Fees`, `Audit Logs`
- Immutable blockchain-inspired audit record of system changes

---

### üìñ Documentation & User Engagement
- Auto-generated guides from PACS workflows
- Tutorial generators for protest, valuation, exemption processes
- User-facing dashboard and video library generated per deployment

---

### üö® Continuous Monitoring & Improvement
- Observability stack: Grafana + Prometheus + Loki + Sentry
- Monitoring ingestion latency, valuation drift, system uptime
- Real-time feedback integration into model training loop

---

### üéñÔ∏è Final Deployment & Go-Live
- Kubernetes-native cloud deployment (HPA, KEDA)
- Integrated PACS job monitoring (billing, import/export schedules)
- Health checks, uptime tracking, auto-recovery

---

### üìà Strategic Growth & Iterative Expansion
- Support multiple counties/states via multi-tenant infra
- Expand to include MLS, public data, appraisal districts
- Integrate economic forecasting and tax revenue simulation

---

### ‚öôÔ∏è Execution Plan

**Phase 1: Initialization & Infrastructure Setup**
- Scaffold project, CI/CD, containerization, PACS integration hooks

**Phase 2: Core MCP Agents Implementation**
- Build and integrate 6 agents mapped to PACS modules

**Phase 3: Advanced AI & Semantic Search**
- RAG prototype with protest docs and PACS queries

**Phase 4: Security & Compliance Assurance**
- Deploy encryption, RBAC, audit trail, and compliance monitors

**Phase 5: User Documentation & Training**
- Auto-gen guides from PACS data + demo library

**Phase 6: Final Deployment & Monitoring**
- Cloud deploy with observability stack
- Real-time KPIs on valuation accuracy, citizen engagement

---

üåü **Next Actions (Immediate)**
- Convert PACS WA index to structured JSON Agent Module Map
- Build ingestion scaffolding for `Land`, `Improvements`, `Fields`
- Prototype chatbot using LangChain + PACS Protest module
- Define Legal Engine rule mappings using `REET`, `Exemptions`, `Rollback`
- Launch interactive dashboards based on `Report Designer`

Your mission: use PACS as foundation and AI as the catalyst to reinvent property tax technology.

Let‚Äôs build the future. üåé‚ú®